sudo: false

addons:
    apt:
      sources:
       - george-edison55-precise-backports
      packages:
       - make
       - cmake-data
       - cmake
       - libgl1-mesa-dri
       - libglu1-mesa-dev
       - libgl1-mesa-dev
       - libfreetype6-dev

matrix:
    include:
    - os: linux
      language: c++
      install: true
    - os: osx
      language: java
      osx_image: xcode9.2
      install: true

cache:
  ccache: true
  directories:
   - $HOME/Library/Caches/Homebrew
   - /home/travis/build/miho/OCC-CSG/oce-OCE-0.18.3
   - /Users/travis/build/miho/OCC-CSG/oce-OCE-0.18.3

env:
  global:
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then PATH=/usr/lib/ccache:${PATH}; fi
    - TIMEOUT=0
    
before_install:
  #- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update          ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install freetype; brew install ccache; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export PATH="/usr/local/opt/ccache/libexec:$PATH"; fi
# setup timeout
- |
  if [ $TRAVIS_OS_NAME == 'osx' ]; then
    # Try to workaround travis-ci/travis-ci#6410 by
    # introducing a timeout fulction, which will timeout before the builder,
    # returning a 'fake' success (eg. 0), tricking it to store the cache.
    TIMEOUT=60
  fi

  # Implement a platform-independent timeout function.
  function timeout() { perl -e 'alarm shift; exec @ARGV' "$@"; }
  
script: 
    - export OUR_DIR=$(pwd)
    - echo "home directory $OUR_DIR"
    - if [ ! -f OCE-0.18.3.tar.gz ]; then wget https://github.com/miho/oce/archive/OCE-0.18.3.tar.gz; fi
    - if [ ! -f oce-OCE-0.18.3 ]; then tar xzf OCE-0.18.3.tar.gz; fi
    - cd oce-OCE-0.18.3
    - mkdir -p build && mkdir -p installation && cd build
    - export OCE_INSTALL_DIR=$(pwd)/../installation/lib/oce-0.18/
    - cmake .. -DLLVM_CCACHE_BUILD=ON -DCMAKE_BUILD_TYPE=Release -DOCE_BUILD_SHARED_LIB=OFF -DOCE_USE_TCL_TEST_FRAMEWORK=OFF -DOCE_TESTING=OFF -DOCE_DRAW=OFF -DOCE_VISUALISATION=ON -DOCE_OCAF=ON -DOCE_DATAEXCHANGE=ON -DOCE_COPY_HEADERS_BUILD=ON -DOCE_MULTITHREAD_LIBRARY=OPENMP -DOCE_INSTALL_PREFIX="$(pwd)/../installation" 
    - | timeout $TIMEOUT make -j4
        timeout $TIMEOUT make install
        # Convert the timeout exit code to 0.
        RESULT=$?; if [ $RESULT -eq 0 ] || [ $RESULT -eq 142 ]; then true; else false; fi;
        
    - cd $OUR_DIR
    - mkdir -p build && cd build
    #- cmake .. -DOCE_DIR=$OCE_INSTALL_DIR || true
    #- make && bin/occ-csg --help          
      
    
